#!/usr/bin/env python
import cv2
import numpy as np
from cv_bridge import CvBridge, CvBridgeError
import rospy
import sys
from sensor_msgs.msg import Image

class CvImageView:
    def __init__(self):
        self.node_name = "cv_image_view"
        self.bridge = CvBridge()
        rospy.init_node(self.node_name)
        rospy.on_shutdown(self.cleanup)

        clean_args = rospy.myargv(argv=sys.argv)
        image_topic = clean_args[1]
        print "Reading Images on topic: %s" % (image_topic)
        self.image_sub = rospy.Subscriber(image_topic, Image, self.image_callback)

        rospy.loginfo("Waiting for image topics...")
    def image_callback(self, ros_image):
        try:
            frame = self.bridge.imgmsg_to_cv2(ros_image, "bgr8")
        except CvBridgeError, e:
            print e
        frame = np.array(frame, dtype=np.uint8)

        cv2.imshow(self.node_name, frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            exit()
    def cleanup(self):
        print "Shutting down vision node."
        cv2.destroyAllWindows()

if __name__ == '__main__':
    print "CV Image View Started"
    try:
        CvImageView()
        rospy.spin()
    except KeyboardInterrupt:
        print "Shutting down vision node."
        cv.DestroyAllWindows()
